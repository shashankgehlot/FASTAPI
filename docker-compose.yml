version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - app-network

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    depends_on:
      - rabbitmq
    networks:
      - app-network

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    depends_on:
      - rabbitmq
    networks:
      - app-network

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    ports:
      - "9000:9000"  # Port for accessing Portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Necessary for Docker management
      - portainer-data:/data  # Persistent storage for Portainer
    networks:
      - app-network

  flower:
    image: mher/flower:0.9.7
    container_name: flower
    environment:
      - CELERY_BROKER_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672  # RabbitMQ connection
      - FLOWER_URL_PREFIX=/flower
    depends_on:
      - rabbitmq           # Ensure RabbitMQ starts first
    networks:
      - app-network

  frontend:
    build:
      context: ../FASTAPIBlog/  # Use the current directory (frontend)
    volumes:
      - ../FASTAPIBlog/:/app  # Sync changes in the frontend directory
    ports:
      - "3000:3000"  # Host port mapped to container port
    environment:
      - CHOKIDAR_USEPOLLING=true  # Helps with file change detection on Docker
    networks:
      - app-network  # Specify the network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"   # Expose Nginx on port 80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./index.html:/usr/share/nginx/html/index.html
      - ./.htpasswd:/etc/nginx/.htpasswd
    depends_on:
      - fastapi
      - flower
    networks:
      - app-network

    

volumes:
  mongo-data:
  rabbitmq-data:
  portainer-data:

networks:
  app-network:
